package com.example.backend.controller;

import com.example.backend.dto.MovieDetailsDTO;
import com.example.backend.model.Movie;
import com.example.backend.service.MovieService;
import com.example.backend.tenant.TenantContext;
import lombok.RequiredArgsConstructor;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.List;
import java.util.UUID;

@RestController
@RequestMapping("/api/movies")
@CrossOrigin(origins = "*")
@RequiredArgsConstructor
public class MovieController {

    private final MovieService movieService;

    @GetMapping
    public List<Movie> getAllMovies() {
        UUID tenantId = UUID.fromString(TenantContext.getCurrentTenant());
        return movieService.getAllMoviesForTenant(tenantId);
    }

    @PostMapping
    public Movie addMovie(@RequestBody Movie movie) {
        UUID tenantId = UUID.fromString(TenantContext.getCurrentTenant());
        movie.setTenantId(tenantId);
        return movieService.saveMovie(movie);
    }

    // âœ… Updated endpoint to fetch accurate movie + showtime details
    @GetMapping("/details/{movieId}/{showtimeId}")
    public ResponseEntity<MovieDetailsDTO> getMovieDetails(
            @PathVariable Long movieId,
            @PathVariable Long showtimeId
    ) {
        UUID tenantId = UUID.fromString(TenantContext.getCurrentTenant());
        MovieDetailsDTO dto = movieService.getMovieDetails(movieId, showtimeId, tenantId);
        return ResponseEntity.ok(dto);
    }

}
